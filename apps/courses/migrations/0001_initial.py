# Generated by Django 5.2.1 on 2025-05-19 11:03

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("profiles", "0002_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("pending", "Pending"),
                            ("deleted", "Deleted"),
                            ("archived", "Archived"),
                            ("suspended", "Suspended"),
                            ("blocked", "Blocked"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                ("meta", models.JSONField(blank=True, default=dict)),
                ("title", models.CharField(max_length=200)),
                ("code", models.CharField(max_length=20, unique=True)),
                ("description", models.TextField()),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "max_students",
                    models.PositiveIntegerField(
                        default=30,
                        help_text="Maximum number of students allowed to enroll",
                    ),
                ),
                (
                    "enrollment_open",
                    models.BooleanField(
                        default=True, help_text="Whether enrollment is currently open"
                    ),
                ),
                (
                    "syllabus",
                    models.TextField(
                        blank=True, help_text="Course syllabus", null=True
                    ),
                ),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="courses",
                        to="profiles.teacherprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Course",
                "verbose_name_plural": "Courses",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Assignment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("pending", "Pending"),
                            ("deleted", "Deleted"),
                            ("archived", "Archived"),
                            ("suspended", "Suspended"),
                            ("blocked", "Blocked"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                ("meta", models.JSONField(blank=True, default=dict)),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("due_date", models.DateTimeField()),
                ("max_points", models.PositiveIntegerField(default=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "instructions",
                    models.TextField(
                        blank=True,
                        help_text="Detailed instructions for completing the assignment",
                        null=True,
                    ),
                ),
                (
                    "allow_late_submissions",
                    models.BooleanField(
                        default=False, help_text="Whether late submissions are allowed"
                    ),
                ),
                (
                    "late_submission_deadline",
                    models.DateTimeField(
                        blank=True,
                        help_text="Final deadline for late submissions",
                        null=True,
                    ),
                ),
                (
                    "attachment_required",
                    models.BooleanField(
                        default=False, help_text="Whether an attachment is required"
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2,
                        default=1.0,
                        help_text="Weight of this assignment in the overall course grade",
                        max_digits=5,
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignments",
                        to="courses.course",
                    ),
                ),
            ],
            options={
                "verbose_name": "Assignment",
                "verbose_name_plural": "Assignments",
                "ordering": ["due_date"],
            },
        ),
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("pending", "Pending"),
                            ("deleted", "Deleted"),
                            ("archived", "Archived"),
                            ("suspended", "Suspended"),
                            ("blocked", "Blocked"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                ("meta", models.JSONField(blank=True, default=dict)),
                ("enrolled_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "last_activity",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Last time the student accessed the course",
                    ),
                ),
                (
                    "completion_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Percentage of course completed",
                        max_digits=5,
                    ),
                ),
                (
                    "grade",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Overall course grade",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to="courses.course",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to="profiles.studentprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Enrollment",
                "verbose_name_plural": "Enrollments",
                "ordering": ["-enrolled_at"],
                "unique_together": {("student", "course")},
            },
        ),
        migrations.CreateModel(
            name="Submission",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("pending", "Pending"),
                            ("deleted", "Deleted"),
                            ("archived", "Archived"),
                            ("suspended", "Suspended"),
                            ("blocked", "Blocked"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                ("meta", models.JSONField(blank=True, default=dict)),
                ("content", models.TextField()),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                ("points", models.PositiveIntegerField(blank=True, null=True)),
                ("is_reviewed", models.BooleanField(default=False)),
                ("feedback", models.TextField(blank=True, null=True)),
                (
                    "attachment",
                    models.FileField(blank=True, null=True, upload_to="submissions/"),
                ),
                (
                    "is_late",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this submission was submitted after the due date",
                    ),
                ),
                (
                    "resubmission_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of times this submission was resubmitted",
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "assignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submissions",
                        to="courses.assignment",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="submissions",
                        to="profiles.studentprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Submission",
                "verbose_name_plural": "Submissions",
                "ordering": ["-submitted_at"],
                "unique_together": {("assignment", "student")},
            },
        ),
    ]
