services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    # by default WORKDIR is /app (from Dockerfile)
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - .env
    environment:
      - DJANGO_ENVIRONMENT=${DJANGO_ENVIRONMENT:-dev}
    ports:
      - "8000:8000"
    depends_on:
      - redis
    volumes:
      - .:/app
    restart: unless-stopped
    networks:
      - core_network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - core_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A core worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - redis
    volumes:
      - .:/app
    restart: unless-stopped
    networks:
      - core_network

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A core beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - redis
    volumes:
      - .:/app
    restart: unless-stopped
    networks:
      - core_network

networks:
  core_network:
    driver: bridge

volumes:
  redis_data:
    driver: local
